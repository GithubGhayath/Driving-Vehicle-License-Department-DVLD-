using DVLDataAccessLayar;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DVLDDataAccessLayar
{
    public class clsTestTypesDataAccessLayar
    {
        static public DataTable GetAllTestTypes()
        {
            DataTable dt = new DataTable();

            SqlConnection connnection = new SqlConnection(clsDataAccessSittings.ConnectionString);

            string Query = "SELECT *FROM TestTypes";

            SqlCommand command=new SqlCommand(Query, connnection);
            try
            {
                connnection.Open();

                SqlDataReader reader = command.ExecuteReader();

                if(reader.HasRows)
                {
                    dt.Load(reader);
                }
            }
            catch (Exception ex) { }
            finally { connnection.Close(); }

            return dt;
        }

        static public bool Find(int TestID,ref string Title,ref string Dececription,ref Decimal Fee)
        {
            bool IsFound = false;

            SqlConnection connection = new SqlConnection(clsDataAccessSittings.ConnectionString);

            string Query = "SELECT *FROM TestTypes WHERE TestTypeID=@TestID";

            SqlCommand command=new SqlCommand(Query, connection);
            command.Parameters.AddWithValue("@TestID", TestID);

            try
            {
                connection.Open();

                SqlDataReader reader = command.ExecuteReader();

                while(reader.Read())
                {
                    IsFound = true;
                    Title = (string)reader["TestTypeTitle"];
                    Dececription = (string)reader["TestTypeDescription"];
                    Fee = (Decimal)reader["TestTypeFees"];
                }
                reader.Close();
            }
            catch(Exception e) { }
            finally { connection.Close(); }

            return IsFound;
        }

        static public int UpdateTestInfo(int testID,string title,string dececription,decimal fee)
        {
            int RowAffected = -1;

            SqlConnection connection = new SqlConnection(clsDataAccessSittings.ConnectionString);

            string Query = @"UPDATE TestTypes
                               SET TestTypeTitle = @Title
                                  ,TestTypeDescription = @dececription
                                  ,TestTypeFees = @fee
                             WHERE TestTypeID=@testID";
            SqlCommand command = new SqlCommand(@Query, connection);
            command.Parameters.AddWithValue("@Title", title);
            command.Parameters.AddWithValue("@dececription", dececription);
            command.Parameters.AddWithValue("@fee",fee);
            command.Parameters.AddWithValue("@testID", testID);

            try
            {
                connection.Open();

                RowAffected = command.ExecuteNonQuery();
            }
            catch(Exception e) { } finally {  connection.Close(); }
            return RowAffected;
        }

    }
}
