using DVLDataAccessLayar;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DVLDDataAccessLayar
{
    public class clsLocalDrivingLicenseApplicationsDataAccessLayar
    {
        static public DataTable GetAllLocalDrivingLicenseApplications()
        {

            /*
             *  //This Code For Implimatation for Count Passed Test In T-SQL
             *  
             *  
             *             CREATE FUNCTION dbo.CountPassedTest(@LocalID INT)
             *             RETURNS INT
             *             AS 
             *             BEGIN
			 *                          DECLARE @PassedTest INT;
             *
             *             SELECT       @PassedTest = COUNT(*)
             *             FROM            LocalDrivingLicenseApplications INNER JOIN
             *                                      TestAppointments ON LocalDrivingLicenseApplications.LocalDrivingLicenseApplicationID = TestAppointments.LocalDrivingLicenseApplicationID INNER JOIN
             *                                      Tests ON TestAppointments.TestAppointmentID = Tests.TestAppointmentID
			 *	                             WHERE (LocalDrivingLicenseApplications.LocalDrivingLicenseApplicationID=@LocalID AND Tests.TestResult=1)
             *
			 *		                             RETURN @PassedTest;
             *              END					 
             */


            DataTable dt = new DataTable();

            SqlConnection connnection = new SqlConnection(clsDataAccessSittings.ConnectionString);

            string Query = @"									SELECT
					LocalDrivingLicenseApplications.LocalDrivingLicenseApplicationID,
					LicenseClasses.ClassName,
					People.NationalNo,
					CONCAT(People.FirstName, ' ', People.SecondName, ' ', ISNULL(People.ThirdName, ''), ' ', People.LastName) AS full_name,
					Applications.ApplicationDate,
					dbo.CountPassedTest(LocalDrivingLicenseApplications.LocalDrivingLicenseApplicationID) AS 'PassedTests',
					ApplicationsStatus.Status
				FROM
					LocalDrivingLicenseApplications
				INNER JOIN LicenseClasses ON LocalDrivingLicenseApplications.LicenseClassID = LicenseClasses.LicenseClassID
				INNER JOIN Applications ON LocalDrivingLicenseApplications.ApplicationID = Applications.ApplicationID
				INNER JOIN People ON Applications.ApplicantPersonID = People.PersonID
				INNER JOIN ApplicationsStatus ON Applications.ApplicationStatus = ApplicationsStatus.StatusID;
";
            SqlCommand command=new SqlCommand(Query, connnection);

            try
            {
                connnection.Open();


                SqlDataReader reader = command.ExecuteReader();

                if (reader.HasRows)
                    dt.Load(reader);
            }
            catch (Exception ex) { }
            finally { connnection.Close(); }

            return dt;
        }


        /*
         * 
--LocalDrivingLicenseApplicationID
--ApplicationID
--LicenseClassID
         */

        static public int CountTestsThatPersonPassed(int PersonID)
        {
            int NumberOfTests = 0;

            SqlConnection connection = new SqlConnection(clsDataAccessSittings.ConnectionString);

            string Query = @"
                            SELECT        COUNT(*)
                            FROM            TestAppointments INNER JOIN
                                                     Tests ON TestAppointments.TestAppointmentID = Tests.TestAppointmentID INNER JOIN
                                                     LocalDrivingLicenseApplications ON TestAppointments.LocalDrivingLicenseApplicationID = LocalDrivingLicenseApplications.LocalDrivingLicenseApplicationID INNER JOIN
                                                     Applications ON LocalDrivingLicenseApplications.ApplicationID = Applications.ApplicationID INNER JOIN
                                                     People ON Applications.ApplicantPersonID = People.PersonID
                            WHERE        (People.PersonID = @PersonID and TestResult=1)";

            SqlCommand command=new SqlCommand(Query,connection);
            command.Parameters.AddWithValue("@PersonID", PersonID);

            try
            {
                connection.Open();

                object obj = command.ExecuteScalar();

                if (int.TryParse(obj.ToString(), out int num))
                    NumberOfTests = num;
            }
            catch (Exception ex) { }
            finally { connection.Close(); }

            return NumberOfTests;

        }

        static public int AddNewLocalDrivingLicenseApplication(int ApplicationID,int LicenseClassID)
        {
            int RowAffected = -1;
            SqlConnection connection = new SqlConnection(clsDataAccessSittings.ConnectionString);

            string Query = @" INSERT INTO LocalDrivingLicenseApplications VALUES  (@ApplicationID,@LicenseClassID)
Select SCOPE_IDENTITY()";
            SqlCommand command = new SqlCommand(Query, connection);
            command.Parameters.AddWithValue("@ApplicationID", ApplicationID);
            command.Parameters.AddWithValue("@LicenseClassID", LicenseClassID);

            try
            {
                connection.Open();

                object Obj = command.ExecuteScalar();

                if(int.TryParse(Obj.ToString(), out int RowA))
                {
                    RowAffected = RowA;
                }
            }
            catch (Exception ex) { }
            finally { connection.Close(); }

            return RowAffected;
        }

        static public bool Update(int LocalDrivingLicenseApplicationID, int ApplicationID, int LicenseClassID)
        {
            int IsUpdated = -1;

            SqlConnection connection = new SqlConnection(clsDataAccessSittings.ConnectionString);

            string Query = @"UPDATE LocalDrivingLicenseApplications SET
                            ApplicationID = @ApplicationID
                           ,LicenseClassID = @LicenseClassID
                             WHERE LocalDrivingLicenseApplicationID=@LocalDrivingLicenseApplicationID";

            SqlCommand command=new SqlCommand(Query, connection);
            command.Parameters.AddWithValue("@ApplicationID", ApplicationID);
            command.Parameters.AddWithValue("@LicenseClassID", LicenseClassID);
            command.Parameters.AddWithValue("@LocalDrivingLicenseApplicationID", LocalDrivingLicenseApplicationID);

            try
            {
                connection.Open();

                IsUpdated = command.ExecuteNonQuery();

            }
            catch (Exception ex) { } finally {  connection.Close(); }

            return IsUpdated > 0;
        }

        static public bool Find(int LocalDrivingLicenseApplicationID,ref int ApplicationID,ref int LicenseClassID)
        {
            bool IsFound = false;
            SqlConnection connection = new SqlConnection(clsDataAccessSittings.ConnectionString);
            string Query = "SELECT *FROM LocalDrivingLicenseApplications WHERE LocalDrivingLicenseApplicationID=@LocalDrivingLicenseApplicationID";

            SqlCommand command=new SqlCommand(Query, connection);
            command.Parameters.AddWithValue("@LocalDrivingLicenseApplicationID", LocalDrivingLicenseApplicationID);

            try
            {
                connection.Open();
                SqlDataReader reader = command.ExecuteReader();

                while(reader.Read())
                {
                    IsFound = true;
                    ApplicationID = (int)reader["ApplicationID"];
                    LicenseClassID = (int)reader["LicenseClassID"];
                }

                reader.Close();
            }
            catch(Exception ex) { }
            finally { connection.Close(); }

            return IsFound;
        }


        static public bool Delete(int LocalDrivingLicenseApplicationID)
        {
            bool IsDeleted = false;

            SqlConnection connection = new SqlConnection(clsDataAccessSittings.ConnectionString);
            string Query = @" 
                                         Begin try
                                        		delete From Tests where TestID in (
                                        		select Tests.TestID from Tests
                                        		where TestAppointmentID in (
                                        		select TestAppointmentID from TestAppointments
                                        		where LocalDrivingLicenseApplicationID=@LocalDrivingLicenseApplicationID))
                                        		
                                        		delete from TestAppointments
                                        		where TestAppointments.LocalDrivingLicenseApplicationID=@LocalDrivingLicenseApplicationID
                                        		
                                        		declare @ApplicationIDForDelete int;
                                        
                                        		select @ApplicationIDForDelete=ApplicationID from LocalDrivingLicenseApplications
                                        		where LocalDrivingLicenseApplications.LocalDrivingLicenseApplicationID=@LocalDrivingLicenseApplicationID
                                        
                                        		delete from LocalDrivingLicenseApplications
                                        		where LocalDrivingLicenseApplications.LocalDrivingLicenseApplicationID=@LocalDrivingLicenseApplicationID
                                        
                                        		delete from Applications
                                        		where ApplicationID=@ApplicationIDForDelete
                                        
                                        		select 'T';
                                        End try
                                        Begin catch
                                        	Select 'F'
                                        End catch 
                                    ";

            SqlCommand command=new SqlCommand(Query,connection);
            command.Parameters.AddWithValue("@LocalDrivingLicenseApplicationID", LocalDrivingLicenseApplicationID);

            try
            {
                connection.Open();
                object obj = command.ExecuteScalar();

                if(obj.ToString()=="T")
                {
                    IsDeleted = true;
                }
            }
            catch(Exception ex) { } finally {  connection.Close(); }

            return IsDeleted;
        }
    }
}
