using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using DVLDataAccessLayar;
using System.Data.SqlClient;
using System.Data;
using System.Net;
using System.Security.Policy;

namespace DVLDataAccessLayar
{
    public class clsPeopleDataAccessLayar
    {
        static public DataTable GetAllPeople()
        {
            DataTable Persons = new DataTable();

            SqlConnection Connection = new SqlConnection(clsDataAccessSittings.ConnectionString);

            string Query = @"

SELECT        People.PersonID, People.NationalNo, People.FirstName, People.SecondName, People.ThirdName, People.LastName, People.Gendor, People.DateOfBirth,People.Address, Countries.CountryName,People.Phone,People.Email
FROM            People INNER JOIN
                         Countries ON People.NationalityCountryID = Countries.CountryID";

            SqlCommand Command = new SqlCommand(Query, Connection);

            try
            {
                Connection.Open();

                SqlDataReader reader = Command.ExecuteReader();

                if (reader.HasRows)
                {
                    Persons.Load(reader);
                }
                else
                    Persons = null;
            } catch (Exception e) { }
            finally { Connection.Close(); }

            return Persons;
        }

        static public bool AddNewPerson(ref int PersonID, string NationalNo, string FirstName,
            string SecondName, string ThirdName, string LastName, DateTime DateOfBirth, string Gendor, 
            string Address,string Phone, string Email, int NationalityCountryID,string ImagePath)
        {
            int IsAddedPerson = -1;

            SqlConnection Connection = new SqlConnection(clsDataAccessSittings.ConnectionString);
            string Query = @"
                            INSERT INTO People
                                 VALUES
                                       (@NationalNo
                                       ,@FirstName
                                       ,@SecondName
                                       ,@ThirdName
                                       ,@LastName
                                       ,@DateOfBirth
                                       ,@Gendor
                                       ,@Address
                                       ,@Phone
                                       ,@Email
                                       ,@NationalityCountryID
                                       ,@ImagePath);select SCOPE_IDENTITY();";

            SqlCommand command = new SqlCommand(Query, Connection);
            command.Parameters.AddWithValue("@NationalNo", NationalNo);
            command.Parameters.AddWithValue("@FirstName", FirstName);
            command.Parameters.AddWithValue("@SecondName", SecondName);
            command.Parameters.AddWithValue("@LastName", LastName);
            command.Parameters.AddWithValue("@DateOfBirth", DateOfBirth);
            command.Parameters.AddWithValue("@Gendor", Gendor);
            command.Parameters.AddWithValue("@Address", Address);
            command.Parameters.AddWithValue("@Phone", Phone);
            command.Parameters.AddWithValue("@NationalityCountryID", NationalityCountryID);

            //Check Third Name
            if (string.IsNullOrEmpty(ThirdName))
                command.Parameters.AddWithValue("@ThirdName", DBNull.Value);
            else
                command.Parameters.AddWithValue("@ThirdName", ThirdName);

            //Check Email
            if (Email == null || Email == string.Empty)
                command.Parameters.AddWithValue("@Email", DBNull.Value);
            else
                command.Parameters.AddWithValue("@Email", Email);

            //Check ImagePath
            if (ImagePath == null || ImagePath == string.Empty)
                command.Parameters.AddWithValue("@ImagePath", DBNull.Value);
            else
                command.Parameters.AddWithValue("@ImagePath", ImagePath);

            try
            {
                Connection.Open();

                object RowAffected = command.ExecuteScalar();

                if (int.TryParse(RowAffected.ToString(), out int Row))
                    IsAddedPerson = Row;

            }
            catch(Exception e) { }
            finally { Connection.Close(); }
            PersonID = IsAddedPerson;
            return IsAddedPerson > 0;

           

        }

        static public bool Find(int PersonID,ref string NationalNo,ref string FirstName,
           ref string SecondName,ref string ThirdName,ref string LastName,ref DateTime DateOfBirth,ref string Gendor,
           ref string Address,ref string Phone,ref string Email,ref int NationalityCountryID,ref string ImagePath)
        {
            bool IsFound = false;
            SqlConnection connection=new SqlConnection(clsDataAccessSittings.ConnectionString);
            string Query = "SELECT * FROM People WHERE PersonID = @PersonID";

            SqlCommand Command = new SqlCommand(Query, connection);
            Command.Parameters.AddWithValue("@PersonID", PersonID);

            try
            {
                connection.Open();

                SqlDataReader reader = Command.ExecuteReader();

                if(reader.Read()) 
                {
                    IsFound = true;
                    NationalNo = (string)reader["NationalNo"];
                    FirstName = (string)reader["FirstName"];
                    SecondName = (string)reader["SecondName"];
                    LastName = (string)reader["LastName"];
                    DateOfBirth = (DateTime)reader["DateOfBirth"];
                    Gendor = (string)reader["Gendor"];
                    Address = (string)reader["Address"];
                    Phone = (string)reader["Phone"];
                    NationalityCountryID = (int)reader["NationalityCountryID"];

                    if (reader["Email"] != DBNull.Value)
                        Email = (string)reader["Email"];
                    else
                        Email = null;

                    if (reader["ThirdName"] != DBNull.Value)
                        ThirdName = (string)reader["ThirdName"];
                    else
                        ThirdName = null;


                    if (reader["ImagePath"] != DBNull.Value)
                        ImagePath = (string)reader["ImagePath"];
                    else
                        ImagePath = string.Empty;
                }

                reader.Close();

            }catch(Exception e) { }
            finally {  connection.Close(); }

            return IsFound;
        }

        static public bool DeletePerson(int personID)
        {
            int RowAffected = -1;
            SqlConnection connection = new SqlConnection(clsDataAccessSittings.ConnectionString);
            string Query = @"
                           DELETE FROM People
                           WHERE PersonID = @PersonID";
            SqlCommand Command=new SqlCommand(Query, connection);
            Command.Parameters.AddWithValue("@PersonID", personID);

            try
            {
                connection.Open();

                 RowAffected = Command.ExecuteNonQuery();
            }
            catch(Exception e) { }
            finally { connection.Close(); }

            return RowAffected > 0;
        }

        static public bool UpdatePerson(int PersonID,  string NationalNo,  string FirstName,
           string SecondName, string ThirdName, string LastName,  DateTime DateOfBirth, string Gendor,
           string Address, string Phone, string Email, int NationalityCountryID, string ImagePath)
        {
            int RowAffected = -1;
            SqlConnection connection = new SqlConnection(clsDataAccessSittings.ConnectionString);
            string Querey = @"UPDATE People
                                SET NationalNo = @NationalNo
                              ,FirstName = @FirstName
                              ,SecondName = @SecondName
                              ,ThirdName = @ThirdName
                              ,LastName = @LastName
                              ,DateOfBirth = @DateOfBirth
                              ,Gendor = @Gendor
                              ,Address = @Address
                              ,Phone = @Phone
                              ,Email = @Email
                              ,NationalityCountryID = @NationalityCountryID
                              ,ImagePath = @ImagePath
                               WHERE PersonID = @PersonID";
            SqlCommand Command = new SqlCommand(Querey, connection);
            Command.Parameters.AddWithValue("@NationalNo", NationalNo);
            Command.Parameters.AddWithValue("@FirstName", FirstName);
            Command.Parameters.AddWithValue("@SecondName", SecondName);
            Command.Parameters.AddWithValue("@LastName", LastName);
            Command.Parameters.AddWithValue("@DateOfBirth", DateOfBirth);
            Command.Parameters.AddWithValue("@Gendor", Gendor);
            Command.Parameters.AddWithValue("@Address", Address);
            Command.Parameters.AddWithValue("@Phone", Phone);
            Command.Parameters.AddWithValue("@NationalityCountryID", NationalityCountryID);
            Command.Parameters.AddWithValue("@PersonID", PersonID);

            if (string.IsNullOrEmpty(ThirdName))
                Command.Parameters.AddWithValue("@ThirdName", DBNull.Value);
            else
                Command.Parameters.AddWithValue("@ThirdName", ThirdName);

            if (Email == null || Email == string.Empty)
                Command.Parameters.AddWithValue("@Email", DBNull.Value);
            else
                Command.Parameters.AddWithValue("@Email", Email);

            if (ImagePath == null || ImagePath == string.Empty)
                Command.Parameters.AddWithValue("@ImagePath", DBNull.Value);
            else
                Command.Parameters.AddWithValue("@ImagePath", ImagePath);

            try
            {
                connection.Open();

                RowAffected = Command.ExecuteNonQuery();
            }
            catch (Exception ex) { }
            finally { connection.Close(); }

            return RowAffected > 0; 
        }

        static public bool IsExists(int PersonID)
        {
            bool IsFound = false;
            SqlConnection connection=new SqlConnection(clsDataAccessSittings.ConnectionString);
            string Query = "SELECT Find=1 FROM People WHERE PersonID = @PersonID";

            SqlCommand command=new SqlCommand(Query, connection);
            command.Parameters.AddWithValue("@PersonID", PersonID);

            try
            {
                connection.Open();
                SqlDataReader reader = command.ExecuteReader();

                if (reader.HasRows)
                    IsFound = true;
            }
            catch (Exception ex) { }
            finally { connection.Close(); }

             return IsFound;
        }

        static public bool FindByNationalNo(ref int PersonID, string NationalNo, ref string FirstName,
            ref string SecondName, ref string ThirdName, ref string LastName, ref DateTime DateOfBirth, ref string Gendor,
            ref string Address, ref string Phone, ref string Email, ref int NationalityCountryID, ref string ImagePath)
        {
            bool IsFound = false;

            SqlConnection connection = new SqlConnection(clsDataAccessSittings.ConnectionString);

            string Query = @"SELECT *FROM People WHERE nationalNo=@Nation";
            SqlCommand command = new SqlCommand(Query, connection);
            command.Parameters.AddWithValue("@Nation", NationalNo);

            try
            {
                connection.Open();
                SqlDataReader reader = command.ExecuteReader();
                while(reader.Read())
                {
                    IsFound = true;
                    PersonID = (int)reader["PersonID"];
                    FirstName = (string)reader["FirstName"];
                    SecondName = (string)reader["SecondName"];
                    LastName = (string)reader["LastName"];
                    DateOfBirth = (DateTime)reader["DateOfBirth"];
                    Gendor = (string)reader["Gendor"];
                    Address = (string)reader["Address"];
                    Phone = (string)reader["Phone"];
                    NationalityCountryID = (int)reader["NationalityCountryID"];

                    if (reader["Email"] != DBNull.Value)
                        Email = (string)reader["Email"];
                    else
                        Email = null;

                    if (reader["ThirdName"] != DBNull.Value)
                        ThirdName = (string)reader["ThirdName"];
                    else
                        ThirdName = null;


                    if (reader["ImagePath"] != DBNull.Value)
                        ImagePath = (string)reader["ImagePath"];
                    else
                        ImagePath = string.Empty;

                }
                reader.Close();
            }
            catch (Exception ex) { }
            finally { connection.Close(); }

            return IsFound;
        }
    }
}
