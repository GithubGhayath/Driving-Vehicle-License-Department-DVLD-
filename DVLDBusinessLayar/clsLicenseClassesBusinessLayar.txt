using DVLDDataAccessLayar;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DVLDBusinessLayar
{
    public class clsLicenseClassesBusinessLayar
    {
        /*
         * LicenseClassID
ClassName
ClassDescription
MinimumAllowedAge
DefaultValidityLength
ClassFees
         */


        public clsLicenseClassesBusinessLayar()
        {

        }

        private clsLicenseClassesBusinessLayar(int LicenseClassID, string ClassName,
string ClassDescription,
int MinimumAllowedAge,
int DefaultValidityLength,
decimal ClassFees)
        {
            this.DefaultValidityLength = DefaultValidityLength;
            this.LicenseClassID = LicenseClassID;
            this.ClassName = ClassName;
            this.ClassDescription = ClassDescription;
            this.ClassFees = ClassFees;
            this.MinimumAllowedAge = MinimumAllowedAge;

        }

        public int LicenseClassID { get; set; }

        public string ClassName { get; set; }   

        public string ClassDescription { get; set; }

        public int MinimumAllowedAge { get; set; }

        public int DefaultValidityLength { get; set; }

        public decimal ClassFees {  get; set; }

        static public DataTable GetAllLicenseClasses()
        {
            return clsLicenseClassesDataAccessLayar.GetAllLicenseClasses();
        }

        static public clsLicenseClassesBusinessLayar Find(string ClassName)
        {
            int LicenseClassID = 0;
            string ClassDescription=string.Empty;
            int MinimumAllowedAge = 0;
            int DefaultValidityLength = 0;
            decimal ClassFees = .0m;

            if (clsLicenseClassesDataAccessLayar.Find(ref LicenseClassID, ClassName, ref ClassDescription, ref MinimumAllowedAge, ref DefaultValidityLength, ref ClassFees))
                return new clsLicenseClassesBusinessLayar(LicenseClassID, ClassName, ClassDescription, MinimumAllowedAge, DefaultValidityLength, ClassFees);
            else
                return null;
        }
        static public clsLicenseClassesBusinessLayar Find(int LicenseClassID)
        {
            string ClassName = string.Empty;
            string ClassDescription = string.Empty;
            int MinimumAllowedAge = 0;
            int DefaultValidityLength = 0;
            decimal ClassFees = .0m;

            if (clsLicenseClassesDataAccessLayar.Find (LicenseClassID, ref ClassName, ref ClassDescription, ref MinimumAllowedAge, ref DefaultValidityLength, ref ClassFees))
                return new clsLicenseClassesBusinessLayar(LicenseClassID, ClassName, ClassDescription, MinimumAllowedAge, DefaultValidityLength, ClassFees);
            else
                return null;
        }
    }
}
